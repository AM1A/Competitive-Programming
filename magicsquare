#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

int main() {
    int s[3][3];
    int dif = 0;
    //int temp[1][3];
   /* int r1[3][3] = {{4,9,2},{3,5,7},{8,1,6}};
    int r2[3][3] = {{8,1,6},{3,5,7},{4,9,2}};
    int r3[3][3] = {{6,1,8},{7,5,3},{2,9,4}};
    int r4[3][3] = {{2,9,4},{7,5,3},{6,1,8}};
    int r5[3][3] = {{8,3,4},{1,5,9},{6,7,2}};
    int r6[3][3] = {{4,3,8},{9,5,1},{2,7,6}};
    int r7[3][3] = {{6,7,2},{1,5,9},{8,3,4}};
    int r8[3][3] = {{2,7,6},{9,5,1},{4,3,8}};*/
    
    int r[8][3][3] = {
    {{8, 1, 6}, {3, 5, 7}, {4, 9, 2}},
    {{6, 1, 8}, {7, 5, 3}, {2, 9, 4}},
    {{4, 9, 2}, {3, 5, 7}, {8, 1, 6}},
    {{2, 9, 4}, {7, 5, 3}, {6, 1, 8}}, 
    {{8, 3, 4}, {1, 5, 9}, {6, 7, 2}}, 
    {{4, 3, 8}, {9, 5, 1}, {2, 7, 6}}, 
    {{6, 7, 2}, {1, 5, 9}, {8, 3, 4}}, 
    {{2, 7, 6}, {9, 5, 1}, {4, 3, 8}},  
};
   /*  {{2,7,6},{9,5,1},{4,3,8}},
     {{2,9,4},{7,5,3},{6,1,8}},
    {{4,3,8},{9,5,1},{2,7,6}},
    {{4,9,2},{3,5,7},{8,1,6}},
     {{6,1,8},{7,5,3},{2,9,4}},
     {{6,7,2},{1,5,9},{8,3,4}},
     {{8,1,6},{3,5,7},{4,9,2}},
    {{8,3,4},{1,5,9},{6,7,2}} */
    int i;
    for(int s_i = 0; s_i < 3; s_i++)
    {
       for(int s_j = 0; s_j < 3; s_j++)
       {
          
          scanf("%d",&s[s_i][s_j]);
           //temp[1][s_i] = temp[1][s_i]+s[s_i][s_j];
          // scanf("%d",&temp);
          // dif = dif+abs(r[s_i][s_j]-temp);
       }
       // dif = dif+abs(temp[1][s_i]-15);
    }
    //  Print the minimum cost of converting 's' into a magic square
 /*   if(s[0][0]==4&&s[0][1]==9)
    {
        i = 0;
    }
    if(s[0][0]==8&&s[0][1]==1)
    {
        i = 1;
    }
    if(s[0][0]==6&&s[0][1]==1)
    {
        i = 2;
    }
    if(s[0][0]==2&&s[0][1]==9)
    {
        i = 3;
    }
    if(s[0][0]==8&&s[0][1]==3)
    {
        i = 4;
    }
    if(s[0][0]==4&&s[0][1]==3)
    {
        i = 5;
    }
    if(s[0][0]==6&&s[0][1]==7)
    {
        i = 6;
    }
    if(s[0][0]==2&&s[0][1]==7)
    {
        i = 7;
    }
    */
    int mind = 1000;
    for(i = 0;i<8;i++)
    {
        dif = 0;
        for(int j = 0;j<3;j++)
        {
            for(int k = 0;k<3;k++)
            {
                dif = dif+abs(s[j][k]-r[i][j][k]);
            }
        }
        if(dif<mind)
        {
            mind = dif;
        }
    }
 
    printf("%d",mind);
    return 0;
}
