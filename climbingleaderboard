#include <stack>
#include <iostream>
using namespace std;

int main(){
  unsigned long n, m, tmp;
  cin >> n;
  stack<unsigned long> scores;
  for (unsigned long i = 0; i < n; ++i) {
    cin >> tmp;
    if (scores.empty() || scores.top() != tmp) scores.push(tmp);
  }
  cin >> m;
  for (unsigned long i = 0; i < m; ++i) {
    cin >> tmp;
    while (!scores.empty() && tmp >= scores.top()) scores.pop();
    cout << scores.size() + 1 << endl;
  }
  return 0;
}

#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

int main()
{
    int n; 
    scanf("%d",&n);
    int *scores = malloc(sizeof(int) * n);
    for(int scores_i = 0; scores_i < n; scores_i++)
    {
       scanf("%d",&scores[scores_i]);
    }
    int m,rank,i,j; 
    scanf("%d",&m);
    int *alice = malloc(sizeof(int) * m);
    for(int alice_i = 0; alice_i < m; alice_i++)
    {
       scanf("%d",&alice[alice_i]);
    }
    // your code goes here
    int last = n-1;
    for(i = 0;i<m;i++)
    {
        rank = 0;
        for(j = 0;j<last;j++)
        {
            if(scores[j]>alice[i]&&scores[j]!=scores[j+1])
            {
                rank++;
            }
        }
        rank = rank+1;
        //last = rank;
        if(scores[n-1]>alice[i])
        {
            rank++;
        }
        printf("%d\n",rank);
        //n = n-1;
            
    }
    return 0;
}
